name: Mobile App CI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/mobile/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/mobile/**'

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/mobile

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: src/mobile/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  test:
    name: Jest Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/mobile

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: src/mobile/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: src/mobile/coverage

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/mobile
    needs: [lint, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: src/mobile/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup asset generation
        run: npm run setup:assets

      - name: Generate source assets
        run: npm run generate:source-assets

      - name: Generate assets
        run: npm run generate:assets

      - name: Build Android Release
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: src/mobile/android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    defaults:
      run:
        working-directory: src/mobile
    needs: [lint, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: src/mobile/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Setup asset generation
        run: npm run setup:assets

      - name: Generate source assets
        run: npm run generate:source-assets

      - name: Generate assets
        run: npm run generate:assets

      - name: Build iOS
        run: |
          cd ios
          xcodebuild -workspace EthicalHackingLMS.xcworkspace -scheme EthicalHackingLMS -configuration Release -sdk iphoneos -archivePath $PWD/build/EthicalHackingLMS.xcarchive archive

      - name: Upload Archive
        uses: actions/upload-artifact@v3
        with:
          name: ios-archive
          path: src/mobile/ios/build/EthicalHackingLMS.xcarchive
