name: Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/mobile/**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/mobile/**'
      - '.github/workflows/test.yml'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: src/mobile/package-lock.json

      - name: Install dependencies
        working-directory: src/mobile
        run: npm ci

      - name: Run linting
        working-directory: src/mobile
        run: npm run lint

      - name: Run tests
        working-directory: src/mobile
        run: npm run test:coverage

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          directory: src/mobile/coverage
          flags: mobile
          name: mobile-coverage
          fail_ci_if_error: false

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: src/mobile/package-lock.json

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install dependencies
        working-directory: src/mobile
        run: npm ci

      - name: Setup asset generation
        working-directory: src/mobile
        run: npm run setup:assets

      - name: Generate source assets
        working-directory: src/mobile
        run: npm run generate:source-assets

      - name: Generate assets
        working-directory: src/mobile
        run: npm run generate:assets

      - name: Build Android
        working-directory: src/mobile
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: src/mobile/android/app/build/outputs/apk/debug/app-debug.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: src/mobile/package-lock.json

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install dependencies
        working-directory: src/mobile
        run: |
          npm ci
          cd ios && pod install

      - name: Setup asset generation
        working-directory: src/mobile
        run: npm run setup:assets

      - name: Generate source assets
        working-directory: src/mobile
        run: npm run generate:source-assets

      - name: Generate assets
        working-directory: src/mobile
        run: npm run generate:assets

      - name: Build iOS
        working-directory: src/mobile
        run: |
          cd ios
          xcodebuild -workspace EthicalHackingLMS.xcworkspace -scheme EthicalHackingLMS -configuration Debug -sdk iphonesimulator -derivedDataPath build

      - name: Upload app
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-ios
          path: src/mobile/ios/build/Build/Products/Debug-iphonesimulator/EthicalHackingLMS.app
