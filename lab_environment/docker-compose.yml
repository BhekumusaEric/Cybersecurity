version: '3.8'

services:
  # Guacamole client
  guacamole:
    image: guacamole/guacamole:1.4.0
    container_name: guacamole
    restart: unless-stopped
    environment:
      - GUACD_HOSTNAME=guacd
      - POSTGRES_HOSTNAME=postgres
      - POSTGRES_DATABASE=guacamole_db
      - POSTGRES_USER=guacamole_user
      - POSTGRES_PASSWORD=guacamole_password
    ports:
      - "8080:8080"
    depends_on:
      - guacd
      - postgres
    networks:
      - lab-network

  # Guacamole daemon
  guacd:
    image: guacamole/guacd:1.4.0
    container_name: guacd
    restart: unless-stopped
    networks:
      - lab-network

  # PostgreSQL database for Guacamole
  postgres:
    image: postgres:14-alpine
    container_name: postgres-guacamole
    restart: unless-stopped
    environment:
      - POSTGRES_DB=guacamole_db
      - POSTGRES_USER=guacamole_user
      - POSTGRES_PASSWORD=guacamole_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - lab-network

  # Kali Linux VM
  kali:
    image: kalilinux/kali-rolling:latest
    container_name: kali
    hostname: kali
    restart: unless-stopped
    privileged: true
    volumes:
      - kali-data:/home/kali
      - ./shared:/shared
    ports:
      - "5901:5901" # VNC
      - "2201:22"   # SSH
    environment:
      - VNC_PASSWORD=kali
      - SSH_PASSWORD=kali
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y kali-desktop-xfce xfce4 xfce4-goodies tightvncserver openssh-server nmap metasploit-framework exploitdb dirb gobuster nikto sqlmap wireshark burpsuite hydra john hashcat && 
        mkdir -p /root/.vnc && 
        echo 'kali' | vncpasswd -f > /root/.vnc/passwd && 
        chmod 600 /root/.vnc/passwd && 
        echo 'xfce4-session' > /root/.vnc/xstartup && 
        chmod +x /root/.vnc/xstartup && 
        vncserver :1 -geometry 1280x800 -depth 24 && 
        tail -f /dev/null
      "
    networks:
      lab-network:
        ipv4_address: 192.168.100.10

  # Metasploitable VM
  metasploitable:
    image: tleemcjr/metasploitable2:latest
    container_name: metasploitable
    hostname: metasploitable
    restart: unless-stopped
    ports:
      - "5900:5900" # VNC
      - "2202:22"   # SSH
    networks:
      lab-network:
        ipv4_address: 192.168.100.100

  # DVWA (Damn Vulnerable Web Application)
  dvwa:
    image: vulnerables/web-dvwa:latest
    container_name: dvwa
    hostname: dvwa
    restart: unless-stopped
    ports:
      - "8081:80"
    networks:
      lab-network:
        ipv4_address: 192.168.100.101

  # OWASP Juice Shop
  juice-shop:
    image: bkimminich/juice-shop:latest
    container_name: juice-shop
    hostname: juice-shop
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      lab-network:
        ipv4_address: 192.168.100.102

  # Vulnerable Windows VM (using a lightweight alternative for demo)
  # In a real environment, you would use a full Windows VM
  vulnerable-windows:
    image: vulnerables/metasploit-vulnerability-emulator:latest
    container_name: vulnerable-windows
    hostname: windows
    restart: unless-stopped
    ports:
      - "8082:80"
    networks:
      lab-network:
        ipv4_address: 192.168.100.200

  # Nginx proxy for lab access
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - guacamole
      - dvwa
      - juice-shop
    networks:
      - lab-network

volumes:
  postgres-data:
  kali-data:

networks:
  lab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24
